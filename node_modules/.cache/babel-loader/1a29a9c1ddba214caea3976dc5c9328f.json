{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\frontend\\\\src\\\\pages\\\\NewIncident\\\\geolo.js\";\nimport React from 'react';\nimport { geolocated, geoPropTypes } from '../src/index';\n\nconst getDirection = (degrees, isLongitude) => degrees > 0 ? isLongitude ? 'E' : 'N' : isLongitude ? 'W' : 'S'; // addapted from http://stackoverflow.com/a/5786281/2546338\n\n\nconst formatDegrees = (degrees, isLongitude) => `${0 | degrees}° ${0 | (degrees < 0 ? degrees = -degrees : degrees) % 1 * 60}' ${0 | degrees * 60 % 1 * 60}\" ${getDirection(degrees, isLongitude)}`;\n\nclass Demo extends React.Component {\n  render() {\n    const {\n      props\n    } = this;\n    return !props.isGeolocationAvailable ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, \"Your browser does not support Geolocation.\") : !props.isGeolocationEnabled ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, \"Geolocation is not enabled.\") : props.coords ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, \"You are at \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"coordinate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 24\n      }\n    }, formatDegrees(props.coords.latitude, false)), \", \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"coordinate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 107\n      }\n    }, formatDegrees(props.coords.longitude, true)), props.coords.altitude ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }\n    }, \", approximately \", props.coords.altitude, \" meters above sea level\") : null, \".\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, \"Getting the location data\\u2026\");\n  }\n\n}\n\nDemo.propTypes = { ...Demo.propTypes,\n  ...geoPropTypes\n};\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false\n  },\n  userDecisionTimeout: 5000\n})(Demo);","map":{"version":3,"sources":["C:/Users/Admin/Documents/frontend/src/pages/NewIncident/geolo.js"],"names":["React","geolocated","geoPropTypes","getDirection","degrees","isLongitude","formatDegrees","Demo","Component","render","props","isGeolocationAvailable","isGeolocationEnabled","coords","latitude","longitude","altitude","propTypes","positionOptions","enableHighAccuracy","userDecisionTimeout"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,cAAzC;;AAEA,MAAMC,YAAY,GAAG,CAACC,OAAD,EAAUC,WAAV,KACnBD,OAAO,GAAG,CAAV,GACKC,WAAW,GAAG,GAAH,GAAS,GADzB,GAEKA,WAAW,GAAG,GAAH,GAAS,GAH3B,C,CAKA;;;AACA,MAAMC,aAAa,GAAG,CAACF,OAAD,EAAUC,WAAV,KACnB,GAAE,IAAID,OAAQ,KAAI,IAAI,CAACA,OAAO,GAAG,CAAV,GAAcA,OAAO,GAAG,CAACA,OAAzB,GAAmCA,OAApC,IAA+C,CAA/C,GAAmD,EAAG,KAAI,IAAIA,OAAO,GAAG,EAAV,GAAe,CAAf,GAAmB,EAAG,KAAID,YAAY,CAACC,OAAD,EAAUC,WAAV,CAAuB,EADpJ;;AAGA,MAAME,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AACjCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,IAAlB;AACA,WAAO,CAACA,KAAK,CAACC,sBAAP,gBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADG,GAEH,CAACD,KAAK,CAACE,oBAAP,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,GAEEF,KAAK,CAACG,MAAN,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACW;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BP,aAAa,CAACI,KAAK,CAACG,MAAN,CAAaC,QAAd,EAAwB,KAAxB,CAA3C,CADX,qBAC8F;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BR,aAAa,CAACI,KAAK,CAACG,MAAN,CAAaE,SAAd,EAAyB,IAAzB,CAA3C,CAD9F,EAGEL,KAAK,CAACG,MAAN,CAAaG,QAAb,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuBN,KAAK,CAACG,MAAN,CAAaG,QAApC,4BADJ,GAEI,IALN,MADF,gBASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAbR;AAcD;;AAjBgC;;AAoBnCT,IAAI,CAACU,SAAL,GAAiB,EAAE,GAAGV,IAAI,CAACU,SAAV;AAAqB,KAAGf;AAAxB,CAAjB;AAEA,eAAeD,UAAU,CAAC;AACxBiB,EAAAA,eAAe,EAAE;AACfC,IAAAA,kBAAkB,EAAE;AADL,GADO;AAIxBC,EAAAA,mBAAmB,EAAE;AAJG,CAAD,CAAV,CAKZb,IALY,CAAf","sourcesContent":["import React from 'react';\r\nimport { geolocated, geoPropTypes } from '../src/index';\r\n\r\nconst getDirection = (degrees, isLongitude) =>\r\n  degrees > 0\r\n    ? (isLongitude ? 'E' : 'N')\r\n    : (isLongitude ? 'W' : 'S');\r\n\r\n// addapted from http://stackoverflow.com/a/5786281/2546338\r\nconst formatDegrees = (degrees, isLongitude) =>\r\n  `${0 | degrees}° ${0 | (degrees < 0 ? degrees = -degrees : degrees) % 1 * 60}' ${0 | degrees * 60 % 1 * 60}\" ${getDirection(degrees, isLongitude)}`\r\n\r\nclass Demo extends React.Component {\r\n  render() {\r\n    const { props } = this;\r\n    return !props.isGeolocationAvailable\r\n      ? <div>Your browser does not support Geolocation.</div>\r\n      : !props.isGeolocationEnabled\r\n        ? <div>Geolocation is not enabled.</div>\r\n        : props.coords\r\n          ? <div>\r\n            You are at <span className=\"coordinate\">{formatDegrees(props.coords.latitude, false)}</span>, <span className=\"coordinate\">{formatDegrees(props.coords.longitude, true)}</span>\r\n            {\r\n              props.coords.altitude\r\n                ? <span>, approximately {props.coords.altitude} meters above sea level</span>\r\n                : null\r\n            }.\r\n          </div>\r\n          : <div>Getting the location data&hellip;</div>;\r\n  }\r\n}\r\n\r\nDemo.propTypes = { ...Demo.propTypes, ...geoPropTypes };\r\n\r\nexport default geolocated({\r\n  positionOptions: {\r\n    enableHighAccuracy: false,\r\n  },\r\n  userDecisionTimeout: 5000,\r\n})(Demo);"]},"metadata":{},"sourceType":"module"}